<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuexibao.ops.model.Announcement" >
  <resultMap id="BaseResultMap" type="com.xuexibao.ops.model.Announcement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="text" property="text" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, status, operator, create_time, update_time,text
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xuexibao.ops.model.Announcement" >
    insert into announcement (id, status, operator, 
      create_time, update_time, text
      )
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{text,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xuexibao.ops.model.Announcement" >
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="text != null" >
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null" >
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateIfNecessary" parameterType="com.xuexibao.ops.model.Announcement" >
    update announcement
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xuexibao.ops.model.Announcement" >
    update announcement
    set status = #{status,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      text = #{text,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuexibao.ops.model.Announcement" >
    update announcement
    set status = #{status,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
     <select id="getNewAnnouncement" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		 from announcement
		 order by create_time desc		
		 limit 1;
	
	</select>
   <select id="searchList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		 from announcement
	   	<where>
	   	   status = 0
			<if test="id != null ">
				AND id = #{id,jdbcType=BIGINT}
			</if>
			<if test="startDate != null">
				AND create_time &gt;= #{startDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endDate != null">
				AND create_time &lt;= #{endDate,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by create_time desc
		<if test="offset != null and limit != null">
		limit #{offset},#{limit};
		</if>
	</select>
	
	
	<select id="searchCount" resultType="long">
		select
		count(1)
		from announcement
		<where>
		     status = 0
			<if test="id != null ">
				AND id = #{id,jdbcType=BIGINT}
			</if>
			<if test="startDate != null">
				AND create_time &gt;= #{startDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endDate != null">
				AND create_time &lt;= #{endDate,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
</mapper>