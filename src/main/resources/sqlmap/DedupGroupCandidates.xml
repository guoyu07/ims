<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuexibao.ops.model.DedupGroupCandidates" >
  <resultMap id="BaseResultMap" type="com.xuexibao.ops.model.DedupGroupCandidates" >
    <result column="group_id" 		property="groupId" 		jdbcType="INTEGER" />
    <result column="question_id" 	property="questionId" 	jdbcType="BIGINT" />
    <result column="knowledge" 		property="knowledge" 	jdbcType="VARCHAR" />
    <result column="content" 		property="content" 		jdbcType="VARCHAR" />
    <result column="answer" 		property="answer" 		jdbcType="VARCHAR" />
    <result column="solution" 		property="solution" 	jdbcType="VARCHAR" />
    <result column="sim_order" 		property="simOrder" 	jdbcType="TINYINT" />
    <result column="quality_order" 	property="qualityOrder" jdbcType="TINYINT" />
    <result column="create_time" 	property="createTime" 	jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    group_id, question_id, knowledge, content, answer, solution, sim_order, quality_order, create_time
  </sql>
  
  <select id="searchListByGroupId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dedup_group_candidates
		where group_id = #{groupId,jdbcType=INTEGER}
		order by sim_order
  </select>
  
  <select id="searchDuplicateList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dedup_group_candidates
		where group_id = #{groupId,jdbcType=INTEGER}
		order by quality_order
  </select>  
  
  <select id="searchListByQuestionId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dedup_group_candidates
		where 
		group_id = #{groupId,jdbcType=INTEGER}
		and question_id = #{questionId,jdbcType=BIGINT}
		order by sim_order
  </select>  
  
  <select id="searchListByGroupIdExclude" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dedup_group_candidates
		where group_id = #{groupId,jdbcType=INTEGER}
		and not exists(select * 
		from dedup_group_exams 
		where dedup_group_exams.group_id = dedup_group_candidates.group_id 
		and  dedup_group_exams.question_id = dedup_group_candidates.question_id)
		order by sim_order
  </select>

  <select id="searchListByGroupIdInclude" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dedup_group_candidates
		where group_id = #{groupId,jdbcType=INTEGER}
		and  exists(select * 
		from dedup_group_exams 
		where dedup_group_exams.group_id = dedup_group_candidates.group_id 
		and  dedup_group_exams.question_id = dedup_group_candidates.question_id)
		order by sim_order
  </select>    
</mapper>